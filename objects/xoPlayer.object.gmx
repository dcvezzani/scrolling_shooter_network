<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise the player and map
CreateCollisionMap();

sprite_index = walk_right;
image_speed = 0.5;
PlayerName="";

// 3 keys: left, right and jump (could be more)
for(var i=0;i&lt;3;i++){
    keys[i] = false;
}

// basic movement setup
xspeed = 2;
grav=2;
jump=false;
dir=0;

global.PlayerTotal++;        


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.PlayerTotal--;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Process the player (move+collision)
var xx,yy,c1,c2;

/// Do payer "jump"
if( !jump ) 
{
    if( keys[JUMP_KEY] ) {
        grav=-8;
        jump=true;
    }
}



// Apply gravity (and jumping)
y = y+grav;
grav+=0.4;
if( grav&gt;=10 ) grav=10;

// If falling, check UNDER the player
if( grav&lt;0 )
{
    if( dir=1){
        sprite_index = jump_right;
    }else{
        sprite_index = jump_left;
    }
    c2 = -1;
    c1 = GetCollision(x,y);
    if( (x&amp;$1f)&gt;0 ) {
        c2=GetCollision(x+32,y);
    }
    if( c1&gt;=0 || c2&gt;=0 )
    {
        grav=0;
        y = (y&amp;$ffffffe0)+32;
    }
}
else{
    // Otherwise, check above player
    if( jump )
    {
        if( dir=1){
            sprite_index = fall_right;
        }else{
            sprite_index = fall_left;
        }    
    }else{
        grav=0;
        jump=true;
    }
    c2 = -1;
    c1 = GetCollision(x,y+32);
    if( (x&amp;$1f)&gt;0 ) {
        c2=GetCollision(x+32,y+32);
    }
    if( c1&gt;=0 || c2&gt;=0 )
    {
        y = (y&amp;$ffffffe0);
        jump=0;
        
        if( dir=1){
            sprite_index = walk_right;
        }else{
            sprite_index = walk_left;
        }           
    }
}    

// If moving left, check LEFT collision
if( keys[LEFT_KEY] ) 
{
    dir=-1;
    if(!jump){
        sprite_index = walk_left;
    }
    x=x-xspeed;
    c2=-1;
    c1 = GetCollision(x,y);
    if( (y&amp;$1f)&gt;0 ) c2=GetCollision(x,y+32);
    if(  c1&gt;=0 ) || ( c2&gt;=0 )
    {
        x = (x&amp;$ffffffe0)+32;
    }    
}else if(keys[RIGHT_KEY] )
{
    // Otherwise, check collision to the right
    dir=1;
    if(!jump){
        sprite_index = walk_right;
    }
    x=x+xspeed;
    c2 = -1;
    c1 = GetCollision(x+32,y);
    if( (y&amp;$1f)&gt;0 ) c2=GetCollision(x+32,y+32);
    if(  c1&gt;=0 ) || ( c2&gt;=0 )
    {
        x = (x&amp;$ffffffe0);
    }    
} else {
    // If standing still, don't animate
    image_index =0;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
